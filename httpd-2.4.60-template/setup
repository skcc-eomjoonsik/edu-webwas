#!/bin/bash

##### start user setting ########################
PKG_HOME="$(cd $(dirname "$0") && pwd -P)"

APACHE_VERSION=2.4.60
TOMCAT_CONNECTOR_VERSION=1.2.49

SOFTWARE_HOME=/software
APACHE_HOME=${SOFTWARE_HOME}/apache

USER=webwas
GROUP=webwas
##### end of user setting #######################

_check_pre_package()
{
  NOTOK_CNT=0

  ### check gcc
  printf "%-30s %-2s" " ### check gcc" ":"
  CHK_GCC=$(rpm -qa | grep -E "^gcc-[0-9]")
  if [ -n "${CHK_GCC}" ]; then
    echo "OK ($(rpm -q --qf '%{VERSION}\n' gcc))"
  else
    echo "NOT OK          # ex> yum install -y gcc"
    NOTOK_CNT=$(expr $NOTOK_CNT + 1)
  fi

  ### check perl
  printf "%-30s %-2s" " ### check perl" ":"
  CHK_PERL=$(rpm -qa | grep -E "^perl-[0-9]")
  if [ -n "${CHK_PERL}" ]; then
    echo "OK ($(perl -e 'print $^V;'))"
  else
    echo "NOT OK          # ex> /bin/yum install -y perl"
    NOTOK_CNT=$(expr $NOTOK_CNT + 1)
  fi

  ### check pcre-devel
  printf "%-30s %-2s" " ### check pcre-devel" ":"
  CHK_PCRE_DEV=$(rpm -qa | grep -E "^pcre-devel-[0-9]")
  if [ -n "${CHK_PCRE_DEV}" ]; then
    echo "OK ($(rpm -q --qf '%{VERSION}\n' pcre-devel))"
  else
    echo "NOT OK          # ex> /bin/yum install -y pcre pcre-devel"
    NOTOK_CNT=$(expr $NOTOK_CNT + 1)
  fi

  ### check openssl-devel
  printf "%-30s %-2s" " ### check openssl-devel" ":"
  CHK_OPENSSL_DEV=$(rpm -qa | grep -E "^openssl-devel-[0-9]")
  if [ -n "${CHK_OPENSSL_DEV}" ]; then
    echo "OK ($(rpm -q --qf '%{VERSION}\n' openssl-devel))"
  else
    echo "NOT OK          # ex> /bin/yum install -y openssl openssl-devel"
    NOTOK_CNT=$(expr $NOTOK_CNT + 1)
  fi

  ### check expat-devel
  printf "%-30s %-2s" " ### check expat-devel" ":"
  CHK_EXPAT_DEV=$(rpm -qa | grep -E "^expat-devel-[0-9]")
  if [ -n "${CHK_EXPAT_DEV}" ]; then
    echo "OK ($(rpm -q --qf '%{VERSION}\n' expat-devel))"
  else
    echo "NOT OK          # ex> /bin/yum install -y expat expat-devel"
    NOTOK_CNT=$(expr $NOTOK_CNT + 1)
  fi

  ### check nghttp2
  printf "%-30s %-2s" " ### check nghttp2" ":"
  CHK_NGHTTP2=$(rpm -qa | grep -E "^nghttp2-[0-9]")
  if [ -n "${CHK_NGHTTP2}" ]; then
    echo "OK ($(rpm -q --qf '%{VERSION}\n' nghttp2))"
  else
    echo "NOT OK          # ex> /bin/yum install -y nghttp2"
    NOTOK_CNT=$(expr $NOTOK_CNT + 1)
  fi

  ### check libnghttp2-devel
  printf "%-30s %-2s" " ### check libnghttp2-devel" ":"
  CHK_NGHTTP2_DEV=$(rpm -qa | grep -E "^libnghttp2-devel-[0-9]")
  if [ -n "${CHK_NGHTTP2_DEV}" ]; then
    echo "OK ($(rpm -q --qf '%{VERSION}\n' libnghttp2-devel))"
  else
    echo "NOT OK          # ex> /bin/yum install -y libnghttp2 libnghttp2-devel"
    NOTOK_CNT=$(expr $NOTOK_CNT + 1)
  fi

  if [ ${NOTOK_CNT} -gt 0 ]; then
    echo ;
    echo "[ERR] Some equired package is not installed."
    echo "[ERR] Install \"NOT OK\" package!!! exit setup"
    echo ;
    exit 1;
  fi
}

_check_directory()
{
  NOTOK_CNT=0

  ### check ${SOFTWARE_HOME}
  if [ ! -d ${SOFTWARE_HOME} ]; then
    echo ;
    echo "[ERR] ${SOFTWARE_HOME} is not exist."
    echo "[ERR] Make ${SOFTWARE_HOME} directory, then try setup again."
    echo ;
    NOTOK_CNT=$(expr $NOTOK_CNT + 1)
    exit 1;
  fi

  ### check permission mkdir ${SOFTWARE_HOME}
  if [ ! -w ${SOFTWARE_HOME} ]; then
    echo ;
    echo "[ERR] You don't have permission to create ${APACHE_HOME}."
    echo "[ERR] Check permission of ${SOFTWARE_HOME}."
    echo ;
    NOTOK_CNT=$(expr $NOTOK_CNT + 1)
    exit 1;
  fi

  ### check apache_home exist
  if [ -d ${APACHE_HOME} ]; then
    echo ;
    echo "[ERR] Directory ${APACHE_HOME} exist."
    echo "[ERR] Specify another \${APACHE_HOME}"
    echo ;
    NOTOK_CNT=$(expr $NOTOK_CNT + 1)
    exit 1;
  fi

  if [ ${NOTOK_CNT} -gt 0 ]; then
    echo ;
    echo "[ERR] Some equired package is not installed."
    echo "[ERR] Install \"NOT OK\" package!!! exit setup"
    echo ;
    exit 1;
  else
    printf "%-30s %-2s" " ### check directory" ":";   echo "OK"
    printf "%-30s %-2s" " ### \${SOFTWARE_HOME}" ":"; echo "${SOFTWARE_HOME}"
    printf "%-30s %-2s" " ### \${APACHE_HOME}" ":";   echo "${APACHE_HOME}"
  fi
}

_install_apache()
{
  cd ${PKG_HOME}/httpd-${APACHE_VERSION}

  ### configure
  printf "%-30s %-2s" " ### Configure apache (${APACHE_VERSION})" ":"
  ./configure --prefix=${APACHE_HOME} --enable-mods-shared=all --with-mpm=event --with-included-apr --enable-ssl --enable-http2 1>${PKG_HOME}/log/install_apache.configure.log 2>&1;
  if [ $? -eq 0 ]; then
    echo "OK (${PKG_HOME}/log/install_apache.configure.log)"; sleep 1
  else
    echo "NOT OK (${PKG_HOME}/log/install_apache.configure.log)"; exit 1
  fi 

  ### make
  printf "%-30s %-2s" " ### Make apache (${APACHE_VERSION})" ":"
  make 1>${PKG_HOME}/log/install_apache.make.log 2>&1;
  if [ $? -eq 0 ]; then
    echo "OK (${PKG_HOME}/log/install_apache.make.log)"; sleep 1
  else
    echo "NOT OK (${PKG_HOME}/log/install_apache.make.log)"; exit 1
  fi

  ### make install
  #mkdir ${APACHE_HOME}
  printf "%-30s %-2s" " ### Install apache (${APACHE_VERSION})" ":"
  make install 1>${PKG_HOME}/log/install_apache.makeinstall.log 2>&1
  if [ $? -eq 0 ]; then
    echo "OK (${PKG_HOME}/log/install_apache.makeinstall.log)"; sleep 1
  else
    echo "NOT OK (${PKG_HOME}/log/install_apache.makeinstall.log)"; exit 1
  fi
}

_install_tomcat_connector()
{
  cd ${PKG_HOME}/tomcat-connectors-${TOMCAT_CONNECTOR_VERSION}-src/native

  ### configure
  printf "%-30s %-2s" " ### Configure connector (${TOMCAT_CONNECTOR_VERSION})" ":"
  ./configure --with-apxs=${APACHE_HOME}/bin/apxs 1>${PKG_HOME}/log/install_connector.configure.log 2>&1;
  if [ $? -eq 0 ]; then
    echo "OK (${PKG_HOME}/log/install_connector.configure.log)"; sleep 1
  else
    echo "NOT OK (${PKG_HOME}/log/install_connector.configure.log)"; exit 1
  fi

  ### make
  printf "%-30s %-2s" " ### Make connector (${TOMCAT_CONNECTOR_VERSION})" ":"
  make 1>${PKG_HOME}/log/install_connector.make.log 2>&1;
  if [ $? -eq 0 ]; then
    echo "OK (${PKG_HOME}/log/install_connector.make.log)"; sleep 1
  else
    echo "NOT OK (${PKG_HOME}/log/install_connector.make.log)"; exit 1
  fi

  ### make install
  printf "%-30s %-2s" " ### Install connector (${TOMCAT_CONNECTOR_VERSION})" ":"
  make install 1>${PKG_HOME}/log/install_connector.makeinstall.log 2>&1
  if [ $? -eq 0 ]; then
    echo "OK (${PKG_HOME}/log/install_connector.make.log)"; sleep 1
  else
    echo "NOT OK (${PKG_HOME}/log/install_connector.make.log)"; exit 1
  fi

  ### copy mod-jk config files
  #cd ${PKG_HOME}/tomcat-connectors-${TOMCAT_CONNECTOR_VERSION}-src/conf
  #cp httpd-jk.conf           ${APACHE_HOME}/conf/extra
  #cp uriworkermap.properties ${APACHE_HOME}/conf/extra
  #cp workers.properties      ${APACHE_HOME}/conf/extra
}

_apply_secure()
{
  ### 1.1 daemon management              : OK - default by servers/template/conf/httpd.conf
  # perl -pi -e "s/User daemon/User ${USER}/g"    ${APACHE_HOME}/conf/httpd.conf
  # perl -pi -e "s/Group daemon/Group ${GROUP}/g" ${APACHE_HOME}/conf/httpd.conf

  ### 1.2 apache directory permission    : OK
  chmod 750 ${APACHE_HOME}
  chmod 700 ${APACHE_HOME}/*

  ### 1.3 config permission              : OK - delete default conf dir
  # CONF_DIRS=`find ${APACHE_HOME} -type d -name conf`
  # for CONF_DIR in ${CONF_DIRS}
  # do
  #    echo "find ${CONF_DIR} -type d -exec chmod 700 {} \;"
  #    echo "find ${CONF_DIR} -type f -exec chmod 600 {} \;"

  #    find ${CONF_DIR} -type d -exec chmod 700 {} \;
  #    find ${CONF_DIR} -type f -exec chmod 600 {} \;
  # done

  ### 1.4 disable directory index option : OK - default by servers/template/conf/httpd.conf
  ### 1.9 disable FollowSymLinks option  : OK - default by servers/template/conf/httpd.conf
  ### 1.10 disable MultiViews option     : OK - default by servers/template/conf/httpd.conf
  # perl -pi -e "s/Options Indexes FollowSymLinks/Options -Indexes -FollowSymLinks -MultiViews/g" ${APACHE_HOME}/conf/httpd.conf

  ### 1.5 log permission                 : OK"
  chmod 750 ${APACHE_HOME}/logs

  ### 1.6 log format setting             : OK - default by servers/template/conf/httpd.conf
  # perl -pi -e "s/LogFormat \"%h/LogFormat \"%a/g" ${APACHE_HOME}/conf/httpd.conf
  # perl -pi -e "s/\\\"\" combined/\\\" %Ts %Dms\" combined/g" ${APACHE_HOME}/conf/httpd.conf
  # perl -pi -e "s/CustomLog \"logs\/access_log\" common/CustomLog \"logs\/access_log\" combined/g" ${APACHE_HOME}/conf/httpd.conf

  ### 1.7 keep log file over 6 month     : OK"
  # echo "recommend over 180 day(6 month)"

  ### 1.8 hide header info               : OK - default by servers/template/conf/httpd.conf
  # perl -pi -e "s/#Include conf\/extra\/httpd-default.conf/Include conf\/extra\/httpd-default.conf/g" ${APACHE_HOME}/conf/httpd.conf
  # perl -pi -e "s/ServerTokens Full/ServerTokens Prod/g" ${APACHE_HOME}/conf/extra/httpd-default.conf

  ### 1.11 restrict HTTP method          : OK - default by servers/template/conf/httpd.conf
  # echo "TraceEnable Off"               >> ${APACHE_HOME}/conf/httpd.conf

  ### 2.1 delete unused directory        : OK"
  rm -rf ${APACHE_HOME}/manual
  rm -rf ${APACHE_HOME}/cgi-bin
  rm -rf ${APACHE_HOME}/conf

  ### 2.2 disable WebDAV setting         : OK - default by servers/template/conf/httpd.conf
  # egrep "mod_dav.so|mod_dav_fs.so|httpd-dav.conf" ${APACHE_HOME}/conf/httpd.conf

  ### 3.1 patch                          : OK"
  CURR_VERSION=`${APACHE_HOME}/bin/httpd -v | grep version | cut -d':' -f2`
  echo "current version : ${CURR_VERSION}"
  #echo "recommend over 2.0.65 / 2.2.20 / 2.4.13"

  echo ;
  echo " ### Apply Secure settings          : OK"
}

_copy_template()
{
   cp -Rp ${PKG_HOME}/servers ${APACHE_HOME}/servers
   cp -Rp ${PKG_HOME}/shl     ${APACHE_HOME}/shl

   printf "%-30s %-2s" " ### copy template" ":"; echo "OK"
}

echo ;
echo "###############################################"
echo "# Check required package                       "
echo "###############################################"
_check_pre_package

echo ;
echo "###############################################"
echo "# Check directory                              "
echo "###############################################"
_check_directory

echo ;
echo "###############################################"
echo "# install apache                               "
echo "###############################################"
_install_apache

echo ;
echo "###############################################"
echo "# instal tomcat connector                      "
echo "###############################################"
_install_tomcat_connector

echo ;
echo "###############################################"
echo "# apply secure settings                        "
echo "###############################################"
_apply_secure

echo ;
echo "###############################################"
echo "# copy template folder                         "
echo "###############################################"
_copy_template
